#pragma once

#include <string>
#include <leaf/global/definitions.h>
#include <leaf/global/types.h>

/// \brief Пространство имен для классов и функций, связанных с логгером
namespace leaf::log
{
  using std::string;
  using types::usize;

  /**
   * \brief Предоставляет тривиальную конфигурацию логгера
   * \details Предоставляет конфигурацию логгера, которая требует минимальной настройки.
   * Логгер пишет в файл с заданным именем, ограниченный размером и максимальным количеством файлов.
   * \note Автор библиотеки не советует использовать эту конфигурацию для своих логгеров.
   * Основное предназначение этого класса - быстрая настройка логгера для отладки (например, для тестов).
   * \version 3.0.0
   */
  struct LEAF_EXPORT [[deprecated("Use leaf::Logger + leaf::LoggerBuilder instead")]] LogFileConfiguration
  {
    /// \brief Уровень логгирования
    enum class LogLevel
    {
      Trace,        ///< Полное логгирование
      Debug,        ///< Логгирование с отладочной информацией
      Info,         ///< Логгирование без отладочной информации, но с информацией о событиях
      Warn,         ///< Логгирование предупреждений и ошибок
      Error,        ///< Логгирование ошибок
      Critical      ///< Логгирование критических ошибок
    };

    /// \brief Инициализирует конфигурацию логгера
    /// \return true, если конфигурация была инициализирована
    [[nodiscard]] auto initialize() -> bool;

    string filename;       ///< Имя логфайла
    usize max_size;        ///< Максимальный размер логфайла в байтах
    usize max_files;       ///< Максимальное количество логфайлов
    LogLevel level;        ///< Уровень логгирования
  };
}